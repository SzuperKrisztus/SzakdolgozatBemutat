@page "/meal/{id:int}"
@inject IMealService MealService
@inject ICartService CartService


@if(meal == null){
    <span>@message</span>
}
else{

    <div class="media-img-wrapper mr-2">
        <img class="media-img" src="@meal.ImageUrl" alt="@meal.Name"/>
    </div>
    <div class=" media-body">
        <h2 class="mb-0">@meal.Name</h2>
        <p>@meal.Description</p>
        <p>@meal.Allergen</p>
        @if (meal.Variants != null && meal.Variants.Count > 1)
        {
            <div class=" mb-3">
                <select class="form-select" @bind="currentTypeId">
                    @foreach (var variant in meal.Variants)
                    {
                        <option value="@variant.MealTypeId">@variant.MealType.Name</option>
                    }
                </select>
            </div>
        }
        @if (GetSelectedVariant() != null)
        {
            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
            {
                <h6 class="text-muted original-price">
                    @GetSelectedVariant().OriginalPrice.ToString("0.##") Ft.
                </h6>
            }
            <h4 class="price">
                @GetSelectedVariant().Price.ToString("0.##") Ft.
            </h4>
        }
        <button class="btn btn-primary" @onclick="AddToCart">
            <i class="oi oi-cart"></i> &nbsp;&nbsp;&nbsp;Add to Cart
            </button>
    </div>

}

@code {
    private Meal? meal = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading Meal...";
        var result = await MealService.GetMeal(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            meal = result.Data;
            if (meal.Variants.Count > 0)
            {
                currentTypeId = meal.Variants[0].MealTypeId;
            }
        }
    }

    private MealVariant GetSelectedVariant()
    {
        var variant = meal.Variants.FirstOrDefault(v => v.MealTypeId == currentTypeId);
        return variant;
    }


    private async Task AddToCart()
    {
        var mealVariant = GetSelectedVariant();
        var cartMeal = new CartMeal
        {
                MealId = mealVariant.MealId,
                MealTypeId = mealVariant.MealTypeId,

        };
       
       await CartService.AddToCart(cartMeal);
    }

}
