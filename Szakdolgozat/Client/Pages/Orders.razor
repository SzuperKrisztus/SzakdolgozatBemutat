@page "/orders"
@inject IOrderService OrderService

<h3>Orders</h3>

@if (o == null)
{
    <span>Rendeléseid betöltése...</span>
}
@if (o.Count <= 0)
{
    <span>Jelenleg nincs rendelésed.</span>
}
else
{
    foreach (var order in o)
    {
        <div class="container">
            <div class="image-wrapper">
                <img src="@order.MealImageUrl" class="image" />
            </div>
            <div class="details">
                <h4>@order.Meal</h4>
                <span>@order.OrderDate</span><br />
                <div class="order-status" style="font-weight:bold">@order.Status</div>
                <div class="order-price" style="font-size:19px">@order.TotalPrice.ToString("0.##") Ft.</div>
                <div style="margin-top:10px">
                <a class "href="orders/@order.Id">Mutass többet...</a>

                </div>
            </div>
        </div>
    }
}

@code {

    List<OrderOverviewResponseDTO> o = null;


    protected override async Task OnInitializedAsync() => o = await OrderService.GetOrders();

}
